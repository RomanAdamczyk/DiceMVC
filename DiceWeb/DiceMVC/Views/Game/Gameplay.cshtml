@model DiceMVC.Application.ViewModels.Game.PlaygameVm

@{
    ViewData["Title"] = "Gameplay";
}

<div id="header">
    Runda nr @Html.DisplayFor(model => model.Round) Gracz @Html.DisplayFor(model => model.CurrentPlayer.Name) </div>
<div id="left">
    <Table border="1">

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Ones)
            </td>

            @if (Model.CurrentPlayer.OnesIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.Ones)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.Ones)
            </td>                
             }

        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Twos)
            </td>
            @if (Model.CurrentPlayer.TwosIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.Twos)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.Twos)
            </td>
            }
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Threes)
            </td>
            @if (Model.CurrentPlayer.ThreesIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.Threes)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.Threes)
            </td>
            }
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Fours)
            </td>
            @if (Model.CurrentPlayer.FoursIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.Fours)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.Fours)
            </td>
            }
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Fives)
            </td>
            @if (Model.CurrentPlayer.FivesIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.Fives)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.Fives)
            </td>
            }
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Sixs)
            </td>
            @if (Model.CurrentPlayer.SixsIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.Sixs)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.Sixs)
            </td>
            }
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Bonus)
            </td>
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.Bonus)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Triple)
            </td>
            @if (Model.CurrentPlayer.TripleIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.Triple)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.Triple)
            </td>
            }
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Fourfold)
            </td>
            @if (Model.CurrentPlayer.FourfoldIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.Fourfold)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.Fourfold)
            </td>
            }
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Full)
            </td>
            @if (Model.CurrentPlayer.FullIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.Full)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.Full)
            </td>
            }
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.SmallStraight)
            </td>
            @if (Model.CurrentPlayer.SmallStraightIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.SmallStraight)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.SmallStraight)
            </td>
            }
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.HighStraight)
            </td>
            @if (Model.CurrentPlayer.HighStraightIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.HighStraight)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.HighStraight)
            </td>
            }
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.General)
            </td>
            @if (Model.CurrentPlayer.GeneralIsUsed){
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.General)
            </td>
            }
            else {
            <td style="color:green">
                @Html.DisplayFor(model => model.OptionalValues.General)
            </td>
            }
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Chance)
            </td>
            @if (Model.CurrentPlayer.ChanceIsUsed)
            {
                    <td>
                    @Html.DisplayFor(model => model.CurrentPlayer.Chance)
                    </td>
                }
                else { 
        <td style="color:green">
            @Html.DisplayFor(model => model.OptionalValues.Chance)
        </td>}
            
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentPlayer.Total)
            </td>
            <td>
                @Html.DisplayFor(model => model.CurrentPlayer.Total)
            </td>
        </tr>
    </Table>
</div>
<div id="content">

    <form asp-action="GamePlay" asp-controller="Game" method="post">
        @Html.HiddenFor(h => h.GameId)
        @Html.HiddenFor(h => h.Dices)
        @Html.HiddenFor(h => h.Dices[Model.Lap].Id)
        @Html.HiddenFor(h => h.CurrentPlayer)
        @Html.HiddenFor(h => h.CurrentPlayer.PlayerId)
        @Html.HiddenFor(h => h.Round)
        @Html.HiddenFor(h => h.Lap)
        <table>
            <thead>
                Zaznacz kości do pozostawienia
            </thead>

            @foreach (var dices in Model.Dices)

            {@if (dices.Lap != 0)

                {
                    <tr>
                        <td colspan="5" align="center">Rzut @dices.Lap</td>
                    </tr>
                    <tr>
                        <td>
                            <img src="@Html.DisplayFor(d => dices.Dice1ImgPath)" alt="@Html.DisplayFor(d => dices.Dice1)" width="100" height="100" title="Dice1" />
                        </td>
                        <td>
                            <img src="@Html.DisplayFor(d => dices.Dice2ImgPath)" alt="@Html.DisplayFor(d => dices.Dice2)" width="100" height="100" title="Dice2" />
                        </td>
                        <td>
                            <img src="@Html.DisplayFor(d => dices.Dice3ImgPath)" alt="@Html.DisplayFor(d => dices.Dice3)" width="100" height="100" title="Dice3" />
                        </td>
                        <td>
                            <img src="@Html.DisplayFor(d => dices.Dice4ImgPath)" alt="@Html.DisplayFor(d => dices.Dice4)" width="100" height="100" title="Dice4" />
                        </td>
                        <td>
                            <img src="@Html.DisplayFor(d => dices.Dice5ImgPath)" alt="@Html.DisplayFor(d => dices.Dice5)" width="100" height="100" title="Dice5" />
                        </td>
                    </tr>
                }

        }

            @if (Model.Lap < 3)
            {
                <tr>
                    <td>
                        @Html.CheckBoxFor(it => it.BlockedDices.Dice1IsBlocked)
                    </td>
                    <td>
                        @Html.CheckBoxFor(it => it.BlockedDices.Dice2IsBlocked)
                    </td>
                    <td>
                        @Html.CheckBoxFor(it => it.BlockedDices.Dice3IsBlocked)
                    </td>
                    <td>
                        @Html.CheckBoxFor(it => it.BlockedDices.Dice4IsBlocked)
                    </td>
                    <td>
                        @Html.CheckBoxFor(it => it.BlockedDices.Dice5IsBlocked)
                    </td>
                </tr>


            }
        </table>
        @if (Model.Lap >= 3)
        {
            @Html.HiddenFor(h => h.BlockedDices.Dice1IsBlocked)
            @Html.HiddenFor(h => h.BlockedDices.Dice2IsBlocked)
            @Html.HiddenFor(h => h.BlockedDices.Dice3IsBlocked)
            @Html.HiddenFor(h => h.BlockedDices.Dice4IsBlocked)
            @Html.HiddenFor(h => h.BlockedDices.Dice5IsBlocked)
            <div class="row "></div>
                @if (!Model.CurrentPlayer.OnesIsUsed)
                {
                    <div class="row ">
                        <div class="col-2 border border-dark"> @Html.DisplayNameFor(model => model.CurrentPlayer.Ones)</div>
                        <div class="col-1 border border-dark">@Html.DisplayFor(model => model.OptionalValues.Ones)</div>
                        <div class="col-1 border border-dark text-center"><input type="radio" class="form-check-input" value="Ones" asp-for="ChooseValue" /></div>
                    </div>
                }
                @if (!Model.CurrentPlayer.TwosIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.Twos)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.Twos)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="Twos" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                @if (!Model.CurrentPlayer.ThreesIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.Threes)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.Threes)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="Threes" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                @if (!Model.CurrentPlayer.FoursIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.Fours)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.Fours)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="Fours" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                @if (!Model.CurrentPlayer.FivesIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.Fives)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.Fives)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="Fives" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                @if (!Model.CurrentPlayer.SixsIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.Sixs)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.Sixs)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="Sixs" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                @if (!Model.CurrentPlayer.TripleIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.Triple)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.Triple)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="Triple" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                @if (!Model.CurrentPlayer.FourfoldIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.Fourfold)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.Fourfold)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="Fourfold" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                @if (!Model.CurrentPlayer.FullIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.Full)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.Full)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="Full" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                @if (!Model.CurrentPlayer.SmallStraightIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.SmallStraight)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.SmallStraight)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="SmallStraight" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                @if (!Model.CurrentPlayer.HighStraightIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.HighStraight)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.HighStraight)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="HighStraight" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                @if (!Model.CurrentPlayer.GeneralIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.General)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.General)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="General" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                @if (!Model.CurrentPlayer.ChanceIsUsed)
                {<div class="row ">
                        <div class="col-2 border border-dark">
                            @Html.DisplayNameFor(model => model.CurrentPlayer.Chance)
                        </div>
                        <div class="col-1 border border-dark">
                            @Html.DisplayFor(model => model.OptionalValues.Chance)
                        </div>
                        <div class="col-1 border border-dark text-center">
                            <input type="radio" class="form-check-input" value="Chance" asp-for="ChooseValue" />
                        </div>
                    </div>
                }
                }
                <input type="submit" name="holdDices" value="Wybierz" style="text-align:center" />

        </form>
</div>

<div id="right">
    <Table border="1">
        <th>
            Place
        </th>
        <th>
            Player
        </th>
        <th>
            Score
        </th>

        @foreach (var player in Model.Players)
        {
            <tr>
                <td>
                    @Html.DisplayFor(pl => player.Place)
                </td>
                <td>
                    @Html.DisplayFor(pl => player.Name)
                </td>
                <td>
                    @Html.DisplayFor(sc => player.Total)
                </td>
            </tr>
        }
    </Table>
</div>
<div id="footer"></div>
